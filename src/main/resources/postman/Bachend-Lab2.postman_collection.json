{
	"info": {
		"_postman_id": "33261ab2-7335-4863-a73c-b1e912d4e538",
		"name": "Bachend-Lab2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39602085"
	},
	"item": [
		{
			"name": "get all users",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{domain}}/users",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user by id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{domain}}/users/2",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "create user",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"dimitri\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{domain}}/users",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete user by id",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{domain}}/users/2",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all categories",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{domain}}/categories",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "get category by id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{domain}}/categories/3",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"categories",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "create category",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"products\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{domain}}/categories",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete category by id",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{domain}}/categories/2",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"categories",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "get record by id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{domain}}/records/1",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"records",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "create record",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": {{user_id}},\r\n    \"categoryId\": {{category_id}},\r\n    \"amount\": 150\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{domain}}/records",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"records"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete record by id",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{domain}}/records/14",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"records",
						"14"
					]
				}
			},
			"response": []
		},
		{
			"name": "get records by user id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{domain}}/records?user_id={{user_id}}",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"records"
					],
					"query": [
						{
							"key": "user_id",
							"value": "{{user_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get records by category id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{domain}}/records?category_id={{category_id}}",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"records"
					],
					"query": [
						{
							"key": "category_id",
							"value": "{{category_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get records by user id and category id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{domain}}/records?category_id=1&user_id=4",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"records"
					],
					"query": [
						{
							"key": "category_id",
							"value": "1"
						},
						{
							"key": "user_id",
							"value": "4"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get records without parameters (bad request)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{domain}}/records",
					"protocol": "http",
					"host": [
						"{{domain}}"
					],
					"path": [
						"records"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "production",
			"value": "java-cost-accounting.onrender.com",
			"type": "string"
		},
		{
			"key": "domain",
			"value": "java-cost-accounting.onrender.com",
			"type": "string"
		},
		{
			"key": "local",
			"value": "127.0.0.1:8080",
			"type": "string"
		}
	]
}